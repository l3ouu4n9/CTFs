import json
from hashlib import sha256
from string import ascii_letters, digits
from pwn import *
from pwnlib.util.iters import bruteforce
def proof_of_work(r):
    r.recvuntil(b"XXXX+")
    suffix = r.recv(16).decode()
    r.recvuntil(b"== ")
    _hexdigest = r.recvline().strip().decode()
    print(f"suffix: {suffix}\nhexdigest: {_hexdigest}")
    prefix = bruteforce(
        lambda x: sha256((x+suffix).encode()).hexdigest() == _hexdigest,
        ascii_letters + digits,
        4,
        "fixed"
    )
    print(prefix)
    r.sendline(prefix)
def main():
    # Get data
    qs = []
    cs = []
    rs = []
    for i in range(50):
        print(i)
        conn = remote("101.32.203.233", 23333)
        # context.log_level = "debug"
        proof_of_work(conn)
        conn.recvline_endswith(b"I really have knowledge of x.")
        g, y, _, q, t, r = conn.recvall().decode().strip().split("\n")[-6:]
        gyt = b"".join(
            map(
                lambda x: int.to_bytes(len(str(x)), 4, 'big') + str(x).encode(),
                (g, y, t)
            ))
        c = int.from_bytes(sha256(gyt).digest(), 'big')
        qs.append(int(q))
        cs.append(int(c))
        rs.append(int(r))
        print(q, c, r)
        conn.close()
    json.dump([qs, cs, rs], open("data", "w"))
if __name__ == "__main__":
    main()