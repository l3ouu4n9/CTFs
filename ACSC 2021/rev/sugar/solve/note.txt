7z x disk.img (get BOOTX64.EFI)

Revise run.sh (for debugging with gdb)
```
#!/bin/sh

./qemu-system-x86_64 -s -S -L . -bios OVMF.fd -drive format=raw,file=disk.img -net none -nographic
#./qemu-system-x86_64 -L . -bios OVMF.fd -drive format=raw,file=disk.img -net none -nographic
```

./run.sh

gef> target remote localhost:1234
gef> c

Qemu window (ctrl a + c to open QEMU monitor, for introspecting on the process)

(qemu) info mem
0000000000000000-0000000006e00000 0000000006e00000 -rw
0000000006e00000-0000000007000000 0000000000200000 -r-
0000000007000000-0000000007ab7000 0000000000ab7000 -rw
0000000007ab7000-0000000007ab9000 0000000000002000 -r-
0000000007ab9000-0000000007abb000 0000000000002000 -rw
0000000007abb000-0000000007abd000 0000000000002000 -r-
0000000007abd000-0000000007abf000 0000000000002000 -rw
0000000007abf000-0000000007ac3000 0000000000004000 -r-
0000000007ac3000-0000000007ac5000 0000000000002000 -rw
0000000007ac5000-0000000007ac7000 0000000000002000 -r-
0000000007ac7000-0000000007ac9000 0000000000002000 -rw
0000000007ac9000-0000000007ad5000 000000000000c000 -r-
0000000007ad5000-0000000007ad8000 0000000000003000 -rw
0000000007ad8000-0000000007adb000 0000000000003000 -r-
0000000007adb000-0000000007ade000 0000000000003000 -rw
0000000007ade000-0000000007ae1000 0000000000003000 -r-
0000000007ae1000-0000000007ae4000 0000000000003000 -rw
0000000007ae4000-0000000007ae7000 0000000000003000 -r-
0000000007ae7000-0000000007aea000 0000000000003000 -rw
0000000007aea000-0000000007aed000 0000000000003000 -r-
0000000007aed000-0000000007c00000 0000000000113000 -rw
0000000007c00000-0000000007e00000 0000000000200000 -r-
0000000007e00000-0000001000000000 0000000ff8200000 -rw

press ctrl + c on gef to start debugging
Dump the memory
gef> dump memory memdump 0x0000000000000000 0000000006e00000

In BOOTX64.EFI, the string "Input flag" is at 0x6640 (IDA)

Open HxD (Search Hex string 49006E007000750074002000)
```
In memdump, the string "Input flag" is at 0x666E640
```

gef> set $base = 0x666E640-0x6640
gef> b *$base+0x061F
gef> c

Offset 0x061F is where our comparison function (sub_1D10) being called

By reversing BOOTX64.EFI, we know that our flag is required to be 38 bytes, starting with "ACSC{" and ends with "}"

Input flag: ACSC{AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA}


gef> i r
We know that it is sub_1D10(rdx, rcx, r8), from sub_1D10
```
rcx		0x7ea4500
rdx		0x7ea44f0
r8		0x10
```

gef➤  x/4gx 0x7ea4500
0x7ea4500:	0x1d88ee5d70dee391	0x240eeb0f844ea8cb
0x7ea4510:	0x5452415020494645	0x0000005c00010000
gef➤  x/4gx 0x7ea44f0
0x7ea44f0:	0xaaaaaaaaaaaaaaaa	0xaaaaaaaaaaaaaaaa
0x7ea4500:	0x1d88ee5d70dee391	0x240eeb0f844ea8cb

Try ACSC{91e3de705dee881dcba84e840feb0e24}

Bingo, we got the flag