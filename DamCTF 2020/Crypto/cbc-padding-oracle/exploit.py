#!/usr/bin/env python3

from pwn import *
import copy


#p = process('./cbc-padding-oracle.py')
#p = remote('bombshell.gtisc.gatech.edu', 30327)
p = remote('chals.damctf.xyz', 30327)

def encrypt(data):
    # Encrypt
    p.recvuntil('your input?\n')
    p.sendline('1')

    # send data length and then data...
    p.recvuntil('Length of the input (size >= 32, multiple of 16)?\n')
    p.sendline(str(len(data)))
    p.recvuntil('Please give me your input!\n')
    p.send(data)

    # grab the result
    p.recvline()
    bytes_line = p.recvline()
    #print(bytes_line)
    encrypted_data = eval(bytes_line)
    return encrypted_data


def decrypt(data):
    # Decrypt
    p.recvuntil('your input?\n')
    p.sendline('2')

    # length of data
    p.recvuntil('Length of the input (size >= 32, multiple of 16)?\n')
    p.sendline(str(len(data)))

    # send
    p.recvuntil('Please give me your input!\n')
    p.send(data)

    return p.recvline()


original_data = encrypt('\n\n')
print(len(original_data))
print(original_data)

def guess_last_character(data, pad_finished):
    arr_data = [b for b in data]
    LAST_BLOCK_BASE = -16

    for i in range(pad_finished):
        arr_data[LAST_BLOCK_BASE-1-i] ^= (pad_finished ^ pad_finished+1)

    for i in range(256):
        iter_arr_data = copy.deepcopy(arr_data)
        iter_arr_data[LAST_BLOCK_BASE-1-pad_finished] ^= i
        padded = b''.join([b.to_bytes(1, 'little') for b in iter_arr_data])
        result = decrypt(padded)
        if b'ERROR' in result:
            print("%d %s" % (i, result))
            continue
        else:
            print("FOUND at %d %s" % (i, result))
            return (padded, i)


# now our data is something like
# [80 bytes] [__ __ __ __ __ __ __ __ __ __ __ __ __ __ 02 02]

padded_data = original_data[:-16]
xor_arr = []

print(len(original_data))
print(original_data)
print(padded_data)
print(len(padded_data))
#input("PRESS ENTER ....")


for i in range(16):
    result = guess_last_character(padded_data, i)
    padded_data = result[0]
    xor_arr.append(result[1]^(i+1))

    flag_1 = ''.join([chr(x) for x in reversed(xor_arr)])
    print(flag_1)
    #input("PRESS ENTER ....")

print(flag_1)
