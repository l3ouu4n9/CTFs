{"query":"fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef }}fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue}fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name } } } } } } }}query IntrospectionQuery { __schema { queryType { name } mutationType { name } types { ...FullType } directives { name description locations args { ...InputValue } } }}"}

{
    "__schema": {
        "queryType": {
            "name": "Query"
        },
        "mutationType": {
            "name": "Mutations"
        },
        "types": [{
            "kind": "OBJECT",
            "name": "Query",
            "description": null,
            "fields": [{
                "name": "user",
                "description": null,
                "args": [],
                "type": {
                    "kind": "OBJECT",
                    "name": "User",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "leads",
                "description": null,
                "args": [{
                    "name": "limit",
                    "description": null,
                    "type": {
                        "kind": "SCALAR",
                        "name": "Int",
                        "ofType": null
                    },
                    "defaultValue": null
                }],
                "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                        "kind": "OBJECT",
                        "name": "Lead",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "User",
            "description": null,
            "fields": [{
                "name": "username",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "SCALAR",
            "name": "String",
            "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
            "fields": null,
            "inputFields": null,
            "interfaces": null,
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "Lead",
            "description": null,
            "fields": [{
                "name": "id",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "firstName",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "lastName",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "email",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "gender",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "ipAddress",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "isVip",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "SCALAR",
            "name": "ID",
            "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
            "fields": null,
            "inputFields": null,
            "interfaces": null,
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "SCALAR",
            "name": "Boolean",
            "description": "The `Boolean` scalar type represents `true` or `false`.",
            "fields": null,
            "inputFields": null,
            "interfaces": null,
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "SCALAR",
            "name": "Int",
            "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31 - 1) and 2^31 - 1 since represented in JSON as double-precision floating point numbers specifiedby [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
            "fields": null,
            "inputFields": null,
            "interfaces": null,
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "Mutations",
            "description": null,
            "fields": [{
                "name": "login",
                "description": null,
                "args": [{
                    "name": "password",
                    "description": null,
                    "type": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                    },
                    "defaultValue": null
                }, {
                    "name": "username",
                    "description": null,
                    "type": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                    },
                    "defaultValue": null
                }],
                "type": {
                    "kind": "OBJECT",
                    "name": "Login",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "Login",
            "description": null,
            "fields": [{
                "name": "ok",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "user",
                "description": null,
                "args": [],
                "type": {
                    "kind": "OBJECT",
                    "name": "User",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "__Schema",
            "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation and subscription operations.",
            "fields": [{
                "name": "types",
                "description": "A list of all types supported by this server.",
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "LIST",
                        "name": null,
                        "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                                "kind": "OBJECT",
                                "name": "__Type",
                                "ofType": null
                            }
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "queryType",
                "description": "The type that query operations will be rooted at.",
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "OBJECT",
                        "name": "__Type",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "mutationType",
                "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
                "args": [],
                "type": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "subscriptionType",
                "description": "If this server support subscription, the type that subscription operations will be rooted at.",
                "args": [],
                "type": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "directives",
                "description": "A list of all directives supported by this server.",
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "LIST",
                        "name": null,
                        "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                                "kind": "OBJECT",
                                "name": "__Directive",
                                "ofType": null
                            }
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "__Type",
            "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
            "fields": [{
                "name": "kind",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "ENUM",
                        "name": "__TypeKind",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "name",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "description",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "fields",
                "description": null,
                "args": [{
                    "name": "includeDeprecated",
                    "description": null,
                    "type": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    },
                    "defaultValue": "false"
                }],
                "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                            "kind": "OBJECT",
                            "name": "__Field",
                            "ofType": null
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "interfaces",
                "description": null,
                "args": [],
                "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                            "kind": "OBJECT",
                            "name": "__Type",
                            "ofType": null
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "possibleTypes",
                "description": null,
                "args": [],
                "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                            "kind": "OBJECT",
                            "name": "__Type",
                            "ofType": null
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "enumValues",
                "description": null,
                "args": [{
                    "name": "includeDeprecated",
                    "description": null,
                    "type": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    },
                    "defaultValue": "false"
                }],
                "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                            "kind": "OBJECT",
                            "name": "__EnumValue",
                            "ofType": null
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "inputFields",
                "description": null,
                "args": [],
                "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                            "kind": "OBJECT",
                            "name": "__InputValue",
                            "ofType": null
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "ofType",
                "description": null,
                "args": [],
                "type": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "ENUM",
            "name": "__TypeKind",
            "description": "An enum describing what kind of type a given `__Type` is",
            "fields": null,
            "inputFields": null,
            "interfaces": null,
            "enumValues": [{
                "name": "SCALAR",
                "description": "Indicates this type is a scalar.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "OBJECT",
                "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "INTERFACE",
                "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "UNION",
                "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "ENUM",
                "description": "Indicates this type is an enum. `enumValues` is a valid field.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "INPUT_OBJECT",
                "description": "Indicates this type is an input object. `inputFields` is a valid field.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "LIST",
                "description": "Indicates this type is a list. `ofType` is a valid field.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "NON_NULL",
                "description": "Indicates this type is a non-null. `ofType` is a valid field.",
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "__Field",
            "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
            "fields": [{
                "name": "name",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "description",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "args",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "LIST",
                        "name": null,
                        "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                                "kind": "OBJECT",
                                "name": "__InputValue",
                                "ofType": null
                            }
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "type",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "OBJECT",
                        "name": "__Type",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "isDeprecated",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "deprecationReason",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "__InputValue",
            "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
            "fields": [{
                "name": "name",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "description",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "type",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "OBJECT",
                        "name": "__Type",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "defaultValue",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "__EnumValue",
            "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
            "fields": [{
                "name": "name",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "description",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "isDeprecated",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "deprecationReason",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "OBJECT",
            "name": "__Directive",
            "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
            "fields": [{
                "name": "name",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "description",
                "description": null,
                "args": [],
                "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "locations",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "LIST",
                        "name": null,
                        "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                                "kind": "ENUM",
                                "name": "__DirectiveLocation",
                                "ofType": null
                            }
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "args",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "LIST",
                        "name": null,
                        "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                                "kind": "OBJECT",
                                "name": "__InputValue",
                                "ofType": null
                            }
                        }
                    }
                },
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "onOperation",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    }
                },
                "isDeprecated": true,
                "deprecationReason": "Use `locations`."
            }, {
                "name": "onFragment",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    }
                },
                "isDeprecated": true,
                "deprecationReason": "Use `locations`."
            }, {
                "name": "onField",
                "description": null,
                "args": [],
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    }
                },
                "isDeprecated": true,
                "deprecationReason": "Use `locations`."
            }],
            "inputFields": null,
            "interfaces": [],
            "enumValues": null,
            "possibleTypes": null
        }, {
            "kind": "ENUM",
            "name": "__DirectiveLocation",
            "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
            "fields": null,
            "inputFields": null,
            "interfaces": null,
            "enumValues": [{
                "name": "QUERY",
                "description": "Location adjacent to a query operation.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "MUTATION",
                "description": "Location adjacent to a mutation operation.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "SUBSCRIPTION",
                "description": "Location adjacent to a subscription operation.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "FIELD",
                "description": "Location adjacent to a field.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "FRAGMENT_DEFINITION",
                "description": "Location adjacent to a fragment definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "FRAGMENT_SPREAD",
                "description": "Location adjacent to a fragment spread.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "INLINE_FRAGMENT",
                "description": "Location adjacent to an inline fragment.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "SCHEMA",
                "description": "Location adjacent to a schema definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "SCALAR",
                "description": "Location adjacent to a scalar definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "OBJECT",
                "description": "Location adjacent to an object definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "FIELD_DEFINITION",
                "description": "Location adjacent to a field definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "ARGUMENT_DEFINITION",
                "description": "Location adjacent to an argument definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "INTERFACE",
                "description": "Location adjacent to an interface definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "UNION",
                "description": "Location adjacent to a union definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "ENUM",
                "description": "Location adjacent to an enum definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "ENUM_VALUE",
                "description": "Location adjacent to an enum value definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "INPUT_OBJECT",
                "description": "Location adjacent to an input object definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }, {
                "name": "INPUT_FIELD_DEFINITION",
                "description": "Location adjacent to an input object field definition.",
                "isDeprecated": false,
                "deprecationReason": null
            }],
            "possibleTypes": null
        }],
        "directives": [{
            "name": "include",
            "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
            "locations": ["FIELD", "FRAGMENT_SPREAD", "INLINE_FRAGMENT"],
            "args": [{
                "name": "if",
                "description": "Included when true.",
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    }
                },
                "defaultValue": null
            }]
        }, {
            "name": "skip",
            "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
            "locations": ["FIELD", "FRAGMENT_SPREAD", "INLINE_FRAGMENT"],
            "args": [{
                "name": "if",
                "description": "Skipped when true.",
                "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                        "kind": "SCALAR",
                        "name": "Boolean",
                        "ofType": null
                    }
                },
                "defaultValue": null
            }]
        }]
    }
}

{"query":"{leads(limit:100){id,email}}"}

{
    "leads": [{
        "id": "1",
        "email": "zaustins0@baidu.com"
    }, {
        "id": "2",
        "email": "mrimmer1@sohu.com"
    }, {
        "id": "3",
        "email": "scristol2@cnbc.com"
    }, {
        "id": "4",
        "email": "vyakushkev3@shareasale.com"
    }, {
        "id": "5",
        "email": "cthumim4@fastcompany.com"
    }, {
        "id": "6",
        "email": "etipping5@indiegogo.com"
    }, {
        "id": "7",
        "email": "dessel6@angelfire.com"
    }, {
        "id": "8",
        "email": "fjewise7@sohu.com"
    }, {
        "id": "9",
        "email": "uturmell8@lycos.com"
    }, {
        "id": "10",
        "email": "jmeriguet9@altervista.org"
    }, {
        "id": "11",
        "email": "asleita@jiathis.com"
    }, {
        "id": "12",
        "email": "rtwycrossb@fotki.com"
    }, {
        "id": "13",
        "email": "lclowsleyc@google.co.jp"
    }, {
        "id": "14",
        "email": "afranceschellid@earthlink.net"
    }, {
        "id": "15",
        "email": "mpatronie@yellowpages.com"
    }, {
        "id": "16",
        "email": "sarnaezf@hud.gov"
    }, {
        "id": "17",
        "email": "gzecchiig@webeden.co.uk"
    }, {
        "id": "18",
        "email": "scovolinih@symantec.com"
    }, {
        "id": "19",
        "email": "ashaplini@mediafire.com"
    }, {
        "id": "20",
        "email": "hwillingalej@biblegateway.com"
    }, {
        "id": "21",
        "email": "pbodemeaidk@irs.gov"
    }, {
        "id": "22",
        "email": "rbrotherheadl@unblog.fr"
    }, {
        "id": "23",
        "email": "ipikenm@purevolume.com"
    }, {
        "id": "24",
        "email": "jdirandn@about.me"
    }, {
        "id": "25",
        "email": "sgoningo@ovh.net"
    }, {
        "id": "26",
        "email": "asymonp@hexun.com"
    }, {
        "id": "27",
        "email": "slipgensq@vkontakte.ru"
    }, {
        "id": "28",
        "email": "ckellertr@wikipedia.org"
    }, {
        "id": "29",
        "email": "adraayers@typepad.com"
    }, {
        "id": "30",
        "email": "driccardt@cyberchimps.com"
    }, {
        "id": "31",
        "email": "asleanyu@cdc.gov"
    }, {
        "id": "32",
        "email": "ntremeerv@weather.com"
    }, {
        "id": "33",
        "email": "ydomeniciw@tinyurl.com"
    }, {
        "id": "34",
        "email": "dwarbyx@histats.com"
    }, {
        "id": "35",
        "email": "araubheimy@wordpress.org"
    }, {
        "id": "36",
        "email": "lcopesz@taobao.com"
    }, {
        "id": "37",
        "email": "agoodie10@uol.com.br"
    }, {
        "id": "38",
        "email": "mstrewthers11@123-reg.co.uk"
    }, {
        "id": "39",
        "email": "dryal12@discovery.com"
    }, {
        "id": "40",
        "email": "rearles13@columbia.edu"
    }, {
        "id": "41",
        "email": "bguarin14@yellowbook.com"
    }, {
        "id": "42",
        "email": "cdudson15@forbes.com"
    }, {
        "id": "43",
        "email": "sdeighan16@pagesperso-orange.fr"
    }, {
        "id": "44",
        "email": "sgrog17@cmu.edu"
    }, {
        "id": "45",
        "email": "amehew18@comcast.net"
    }, {
        "id": "46",
        "email": "agietz19@hud.gov"
    }, {
        "id": "47",
        "email": "cchansonne1a@de.vu"
    }, {
        "id": "48",
        "email": "cquye1b@theguardian.com"
    }, {
        "id": "49",
        "email": "dtaaffe1c@bing.com"
    }, {
        "id": "50",
        "email": "gternent1d@parallels.com"
    }, {
        "id": "51",
        "email": "aguinan1e@wordpress.org"
    }, {
        "id": "52",
        "email": "mmusprat1f@oakley.com"
    }, {
        "id": "53",
        "email": "rendecott1g@yellowbook.com"
    }, {
        "id": "54",
        "email": "vcoston1h@bloglines.com"
    }, {
        "id": "55",
        "email": "tbrugman1i@earthlink.net"
    }, {
        "id": "56",
        "email": "tlovie1j@java.com"
    }, {
        "id": "57",
        "email": "kdarcey1k@yahoo.co.jp"
    }, {
        "id": "58",
        "email": "kkempshall1l@wsj.com"
    }, {
        "id": "59",
        "email": "erottery1m@ucsd.edu"
    }, {
        "id": "60",
        "email": "stimpany1n@tuttocitta.it"
    }, {
        "id": "61",
        "email": "tmcgrey1o@sciencedirect.com"
    }, {
        "id": "62",
        "email": "AppSec-IL{c4R8ON-15-9r4phene}"
    }, {
        "id": "63",
        "email": "ffalls1q@unicef.org"
    }, {
        "id": "64",
        "email": "lheam1r@nbcnews.com"
    }, {
        "id": "65",
        "email": "mfasey1s@patch.com"
    }, {
        "id": "66",
        "email": "iscotchbourouge1t@slideshare.net"
    }, {
        "id": "67",
        "email": "bbrise1u@senate.gov"
    }, {
        "id": "68",
        "email": "ohadlow1v@jimdo.com"
    }, {
        "id": "69",
        "email": "ibernadzki1w@cocolog-nifty.com"
    }, {
        "id": "70",
        "email": "maylesbury1x@live.com"
    }, {
        "id": "71",
        "email": "jpott1y@go.com"
    }, {
        "id": "72",
        "email": "tledur1z@zdnet.com"
    }, {
        "id": "73",
        "email": "mweine20@dedecms.com"
    }, {
        "id": "74",
        "email": "pbrooksbank21@nytimes.com"
    }, {
        "id": "75",
        "email": "kbuckel22@barnesandnoble.com"
    }, {
        "id": "76",
        "email": "menochsson23@booking.com"
    }, {
        "id": "77",
        "email": "gbantham24@google.ca"
    }, {
        "id": "78",
        "email": "brappaport25@cnbc.com"
    }, {
        "id": "79",
        "email": "ctieman26@bizjournals.com"
    }, {
        "id": "80",
        "email": "esouthers27@theglobeandmail.com"
    }, {
        "id": "81",
        "email": "fmarguerite28@shareasale.com"
    }, {
        "id": "82",
        "email": "cglinde29@godaddy.com"
    }, {
        "id": "83",
        "email": "cmatusiak2a@photobucket.com"
    }, {
        "id": "84",
        "email": "lhandforth2b@baidu.com"
    }, {
        "id": "85",
        "email": "btricker2c@chicagotribune.com"
    }, {
        "id": "86",
        "email": "aguerra2d@linkedin.com"
    }, {
        "id": "87",
        "email": "cgiorgietto2e@statcounter.com"
    }, {
        "id": "88",
        "email": "aletchmore2f@blog.com"
    }, {
        "id": "89",
        "email": "ckealey2g@wired.com"
    }, {
        "id": "90",
        "email": "shearsey2h@mail.ru"
    }, {
        "id": "91",
        "email": "cboycott2i@blog.com"
    }, {
        "id": "92",
        "email": "pmacken2j@shinystat.com"
    }, {
        "id": "93",
        "email": "bconachie2k@apache.org"
    }, {
        "id": "94",
        "email": "hfaichnie2l@cdc.gov"
    }, {
        "id": "95",
        "email": "enewlyn2m@weibo.com"
    }, {
        "id": "96",
        "email": "dwhitford2n@slate.com"
    }, {
        "id": "97",
        "email": "bstandingford2o@mlb.com"
    }, {
        "id": "98",
        "email": "eemanuelov2p@theguardian.com"
    }, {
        "id": "99",
        "email": "rbednall2q@wisc.edu"
    }, {
        "id": "100",
        "email": "bjeffryes2r@wikipedia.org"
    }]
}