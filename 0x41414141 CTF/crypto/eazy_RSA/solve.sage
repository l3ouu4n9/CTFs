from Crypto.Util.number import long_to_bytes
from sage.all import *
e = 16
p = 75000325607193724293694446403116223058337764961074929316352803137087536131383
q = 69376057129404174647351914434400429820318738947745593069596264646867332546443
c = 3708354049649318175189820619077599798890688075815858391284996256924308912935262733471980964003143534200740113874286537588889431819703343015872364443921848
n = p * q

rmodp = Mod(c % p, p).nth_root(e, all=True)
rq = Mod(c % q, q).nth_root(e)

for rp in rmodp:

    r = crt(int(rp), int(rq), p, q)
    flag = long_to_bytes(r)

    if b"flag" in flag:
        print(flag.decode())