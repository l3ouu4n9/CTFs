import base64
import json
import re
from itertools import chain
import requests
from typing import List, Dict

TARGET_URL = "http://pwn.osucyber.club:13375"

def split_blocks(data: bytes, blocksize: int = 16) -> List[bytes]:
	return [data[s : s + blocksize] for s in range(0, len(data), blocksize)]

def merge_blocks(blocks: List[bytes]) -> bytes:
	return bytes(chain.from_iterable(blocks))

def pkcs7(data: bytes, blocksize: int = 16) -> bytes:
	d = bytearray(data)
	padding_len = blocksize - len(d) % blocksize
	d.extend(padding_len for _ in range(padding_len))
	return bytes(d)

def get_cookie(name: str) -> str:
	res = requests.post(f"{TARGET_URL}/login", {"username": name}, allow_redirects=False)
	cookies = {c.name: c.value for c in res.cookies}
	return cookies.get('SESSIONID1', None)

def make_cleartext(name: str) -> bytes:
	session = {'name': name, 'role': 'users'}
	return pkcs7(json.dumps(session, separators=(',',':')).encode('ascii', errors='replace'))

def get_flag(cookie: str) -> str:
	res = requests.get(f"{TARGET_URL}/flag", cookies={'SESSIONID1': cookie}, allow_redirects=False)
	print(*re.findall(r'osuctf{.*}', res.text), sep='\n')

names = [

	# Use JSON escaping to pass the 20 charater limits for name
	# {"name":"AAAA\"\"administrators","role":"users"}PPPPPPPPPPPPPPPP
	# get "administrators"
	# #-------1------##-------2------##-------3------##-------4------#
	"AAAA\"\"administrators",

	# {"name":"AAAAAAAAAAAAAA","role":"users"}PPPPPPPP
	# get {"name":"AAAAAAAAAAAAAA","role":
	# #-------1------##-------2------##-------3------#
	"AAAAAAAAAAAAAA",

	# {"name":"AAAAAAA","role":"users"}PPPPPPPPPPPPPPP
	# #-------1------##-------2------##-------3------#
	# get }PPPPPPPPPPPPPPP
	"AAAAAAA"
]

cookies = {make_cleartext(name): base64.b64decode(get_cookie(name)) for name in names}

blocks = {}

for cleartext, ciphertext in cookies.item():
	blocks.update({a: b for a, b in zip(split_blocks(cleartext), split_blocks(ciphertext))})


# {"name":"AAAAAAAAAAAAAA","role":"administrators"}PPPPPPPPPPPPPPP
# #-------1------##-------2------##-------3------##------4-------#

new_cleartext_blocks = split_blocks(pkcs7(b'{"name":"AAAAAAAAAAAAAA","role":"administrators"}'))
new_cookie = base64.b64encode(merge_blocks(blocks[b] for b in new_cleartext_blocks)).decode('ascii')

print(f"Cookie: {new_cookie}")
get_flag(new_cookie)
